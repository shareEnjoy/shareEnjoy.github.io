<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SHAREEN</title>
  
  <subtitle>沉静的空气，环绕在身边，让时间失衡</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shareen.work/"/>
  <updated>2020-02-29T13:03:54.230Z</updated>
  <id>https://shareen.work/</id>
  
  <author>
    <name>quietAir</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Boot入门</title>
    <link href="https://shareen.work/2020/02/29/spring-boot-01/"/>
    <id>https://shareen.work/2020/02/29/spring-boot-01/</id>
    <published>2020-02-29T12:24:00.000Z</published>
    <updated>2020-02-29T13:03:54.230Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Spring-Boot-简介"><a href="#1-Spring-Boot-简介" class="headerlink" title="1.Spring Boot 简介"></a>1.Spring Boot 简介</h3><blockquote><p>简化Spring应用开发的一个框架；</p><p>整个Spring技术栈的一个大整合；</p><p>J2EE开发的一站式解决方案；</p></blockquote><h3 id="2-微服务"><a href="#2-微服务" class="headerlink" title="2.微服务"></a>2.微服务</h3><p>微服务：架构风格（服务微化）</p><p>一个应用应该是一组小型服务；可以通过HTTP的方式进行互通；</p><p>单体应用：ALL IN ONE</p><p>微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p><p><a href="https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa" target="_blank" rel="noopener">详细参照微服务文档</a></p><h3 id="3-环境准备"><a href="#3-环境准备" class="headerlink" title="3.环境准备"></a>3.环境准备</h3><p>环境约束:</p><p>–jdk1.8：Spring Boot 推荐jdk1.7及以上；</p><p>–maven3.x：maven 3.3以上版本；</p><p>–IntelliJIDEA：IntelliJ IDEA </p><p>–SpringBoot 1.5.9.RELEASE：1.5.9；</p><h4 id="1、MAVEN设置；"><a href="#1、MAVEN设置；" class="headerlink" title="1、MAVEN设置；"></a>1、MAVEN设置；</h4><p>给maven 的settings.xml配置文件的profiles标签添加(可以添加，也可以不用)；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2、IDEA设置"><a href="#2、IDEA设置" class="headerlink" title="2、IDEA设置"></a>2、IDEA设置</h4><p>首先对maven进行整合；</p><p><img src="/images/20200229191224.png" alt="idea设置"></p><p><img src="/images/20200229191357.png" alt="images/"></p><h3 id="4-Spring-Boot-HelloWorld"><a href="#4-Spring-Boot-HelloWorld" class="headerlink" title="4.Spring Boot HelloWorld"></a>4.Spring Boot HelloWorld</h3><p>实现一个简单的功能：</p><p>浏览器发送hello请求，服务器接受请求并处理，响应Hello World字符串；</p><h4 id="1、创建一个maven工程（jar）"><a href="#1、创建一个maven工程（jar）" class="headerlink" title="1、创建一个maven工程（jar）"></a>1、创建一个maven工程（jar）</h4><h4 id="2、导入spring-boot相关的依赖"><a href="#2、导入spring-boot相关的依赖" class="headerlink" title="2、导入spring boot相关的依赖"></a>2、导入spring boot相关的依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、编写一个主程序；启动Spring-Boot应用"><a href="#3、编写一个主程序；启动Spring-Boot应用" class="headerlink" title="3、编写一个主程序；启动Spring Boot应用"></a>3、编写一个主程序；启动Spring Boot应用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SpringBootApplication</span> 来标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、编写相关的Controller、Service"><a href="#4、编写相关的Controller、Service" class="headerlink" title="4、编写相关的Controller、Service"></a>4、编写相关的Controller、Service</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5、运行主程序测试"><a href="#5、运行主程序测试" class="headerlink" title="5、运行主程序测试"></a>5、运行主程序测试</h4><h4 id="6、简化部署"><a href="#6、简化部署" class="headerlink" title="6、简化部署"></a>6、简化部署</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将这个应用打成jar包，再window下或者Linux下直接使用java -jar的命令进行执行；</p><h3 id="5-Hello-World探究"><a href="#5-Hello-World探究" class="headerlink" title="5.Hello World探究"></a>5.Hello World探究</h3><h4 id="1-POM文件"><a href="#1-POM文件" class="headerlink" title="1.POM文件"></a>1.POM文件</h4><h5 id="1、父项目"><a href="#1、父项目" class="headerlink" title="1、父项目"></a>1、父项目</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">上面的父项目是</span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">它来真正管理Spring Boot应用里面的所有依赖版本；</span><br></pre></td></tr></table></figure><p>Spring Boot的版本仲裁中心；</p><p>以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）</p><h5 id="2、启动器"><a href="#2、启动器" class="headerlink" title="2、启动器"></a>2、启动器</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring-boot-starter-<strong>web</strong>：</p><p>​    spring-boot-starter：spring-boot场景启动器；帮我们导入了web模块正常运行所依赖的组件；</p><p>总结：Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器</p><h4 id="2-主程序类，主入口类"><a href="#2-主程序类，主入口类" class="headerlink" title="2.主程序类，主入口类"></a>2.主程序类，主入口类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SpringBootApplication</span> 来标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@<strong>SpringBootApplication</strong>:    Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(excludeFilters = &#123;</span><br><span class="line">      <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span><br><span class="line">      <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123;</span><br></pre></td></tr></table></figure><p>@<strong>SpringBootConfiguration</strong>:Spring Boot的配置类；</p><p>​        标注在某个类上，表示这是一个Spring Boot的配置类；</p><p>​        @<strong>Configuration</strong>:配置类上来标注这个注解；</p><p>​            配置类 —–  配置文件；配置类也是容器中的一个组件；<strong>@Component</strong></p><p>@<strong>EnableAutoConfiguration</strong>：开启自动配置功能；</p><p>​        以前我们需要配置的东西，Spring Boot帮我们自动配置；@<strong>EnableAutoConfiguration</strong>告诉SpringBoot开启自动配置功能；这样自动配置才能生效；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import</span>(EnableAutoConfigurationImportSelector.class)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableAutoConfiguration &#123;</span><br></pre></td></tr></table></figure><p>​    @<strong>AutoConfigurationPackage</strong>：自动配置包</p><p>​        @<strong>Import</strong>(AutoConfigurationPackages.Registrar.class)：</p><p>​        Spring的底层注解<strong>@Import</strong>，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；</p><p>==将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；==</p><p>​    @<strong>Import</strong>(EnableAutoConfigurationImportSelector.class)；</p><p>​        给容器中导入组件？</p><p>​        <strong>EnableAutoConfigurationImportSelector</strong>：导入哪些组件的选择器；</p><p>​        将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；</p><p>​        会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；        <img src="/images/20200229203810.png" alt="自动配置类"></p><p>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；</p><p>​        SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)；</p><p>总结：Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；</p><p>J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；</p><h3 id="6-IDEA：使用-Spring-Initializer快速创建spring-boot项目"><a href="#6-IDEA：使用-Spring-Initializer快速创建spring-boot项目" class="headerlink" title="6.IDEA：使用 Spring Initializer快速创建spring boot项目"></a>6.IDEA：使用 Spring Initializer快速创建spring boot项目</h3><p>IDE都支持使用Spring的项目创建向导快速创建一个Spring Boot项目；</p><p>选择我们需要的模块；向导会联网创建Spring Boot项目；</p><p>默认生成的Spring Boot项目；</p><ul><li>主程序已经生成好了，我们只需要我们自己的逻辑</li><li>resources文件夹中目录结构<ul><li>static：保存所有的静态资源； js css  images；</li><li>templates：保存所有的模板页面；（Spring Boot默认jar包使用嵌入式的Tomcat，默认不支持JSP页面）；可以使用模板引擎（freemarker、thymeleaf）；</li><li>application.properties：Spring Boot应用的配置文件；可以修改一些默认设置；</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-Spring-Boot-简介&quot;&gt;&lt;a href=&quot;#1-Spring-Boot-简介&quot; class=&quot;headerlink&quot; title=&quot;1.Spring Boot 简介&quot;&gt;&lt;/a&gt;1.Spring Boot 简介&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;简
      
    
    </summary>
    
    
      <category term="后端技术" scheme="https://shareen.work/categories/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="spring boot" scheme="https://shareen.work/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>双十一淘宝刷喵币、京东养红包脚本</title>
    <link href="https://shareen.work/2019/10/24/tianmao/"/>
    <id>https://shareen.work/2019/10/24/tianmao/</id>
    <published>2019-10-24T07:24:00.000Z</published>
    <updated>2019-11-11T05:41:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、2019双十一淘宝刷喵币脚本"><a href="#一、2019双十一淘宝刷喵币脚本" class="headerlink" title="一、2019双十一淘宝刷喵币脚本"></a>一、2019双十一淘宝刷喵币脚本</h2><p>上一个版本不能用了，目前只能用安卓手机的了。</p><h3 id="1-下载并安装Auto-js"><a href="#1-下载并安装Auto-js" class="headerlink" title="1.下载并安装Auto.js"></a>1.下载并安装Auto.js</h3><p>到应用商店去搜索下载就行，也可以去官网:<a href="https://hyb1996.github.io/AutoJs-Docs" target="_blank" rel="noopener">https://hyb1996.github.io/AutoJs-Docs</a></p><h3 id="2-为软件打开无障碍权限"><a href="#2-为软件打开无障碍权限" class="headerlink" title="2.为软件打开无障碍权限."></a>2.为软件打开无障碍权限.</h3><p>打开无障碍后，在软件中将下面脚本保存并运行即可,脚本会自己打开手机淘宝并进行一系列的操作.</p><h3 id="3-将下面脚本复制到上一步文件中"><a href="#3-将下面脚本复制到上一步文件中" class="headerlink" title="3.将下面脚本复制到上一步文件中"></a>3.将下面脚本复制到上一步文件中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">auto.waitFor()</span><br><span class="line">var appRun = currentActivity()</span><br><span class="line">var t=0</span><br><span class="line"><span class="keyword">if</span>(appRun != <span class="string">'com.taobao.taobao'</span>) &#123;</span><br><span class="line">    launchApp(<span class="string">"手机淘宝"</span>)</span><br><span class="line">    toast(<span class="string">"打开手机淘宝中"</span>);</span><br><span class="line">    sleep(5000)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">    className(<span class="string">"android.view.View"</span>).desc(<span class="string">"搜索"</span>).clickable(<span class="literal">true</span>).findOne().click()</span><br><span class="line">    sleep(2000)</span><br><span class="line">    id(<span class="string">"searchEdit"</span>).waitFor()</span><br><span class="line">    sleep(500)</span><br><span class="line">    id(<span class="string">"searchEdit"</span>).findOne().setText(<span class="string">"双十一合伙人"</span>)</span><br><span class="line">    sleep(1000)</span><br><span class="line">    id(<span class="string">"searchbtn"</span>).findOne().click()</span><br><span class="line">    sleep(5000)</span><br><span class="line">    className(<span class="string">"android.view.View"</span>).depth(18).boundsInside(device.width /2, device.height / 2, device.width, device.height).clickable(<span class="literal">true</span>).findOne().click()</span><br><span class="line">    sleep(3000)</span><br><span class="line">    <span class="keyword">if</span> (text(<span class="string">"签到"</span>).exists()) &#123;</span><br><span class="line">        text(<span class="string">"签到"</span>).findOne().click();</span><br><span class="line">        sleep(1600);</span><br><span class="line">        toast(<span class="string">"签到成功"</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">while</span>(text(<span class="string">"去进店"</span>).exists()) &#123;</span><br><span class="line">        toast(<span class="string">"开始进行 去进店 任务！"</span>)</span><br><span class="line">        goShop()</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span>(text(<span class="string">"去浏览"</span>).exists()) &#123;</span><br><span class="line">        toast(<span class="string">"开始进行 去浏览 任务！"</span>)</span><br><span class="line">        goBrowse()</span><br><span class="line">    &#125;;</span><br><span class="line">    toast(<span class="string">"今日任务已完成！"</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">goShop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">let</span> x = device.width / 2, y = device.height / 5;</span><br><span class="line">    text(<span class="string">"去进店"</span>).findOne().click()</span><br><span class="line">    toast(<span class="string">"点击去进店"</span>)</span><br><span class="line">    sleep(2000)</span><br><span class="line">    <span class="keyword">if</span>(desc(<span class="string">"签到领喵币"</span>).exists())&#123;</span><br><span class="line">    var b = desc(<span class="string">"签到领喵币"</span>).findOne().bounds();</span><br><span class="line">    click(b.centerX(), b.centerY());</span><br><span class="line">    sleep(1000)</span><br><span class="line">    className(<span class="string">"android.widget.ImageView"</span>).depth(10).drawingOrder(2).findOne().click()</span><br><span class="line">    &#125;</span><br><span class="line">    var task = className(<span class="string">'android.view.View'</span>).depth(11).desc(<span class="string">'任务完成'</span>).exists()</span><br><span class="line">    <span class="keyword">while</span>(!task) &#123;</span><br><span class="line">        swipe(x, 4*y, x, y,1000);</span><br><span class="line">        sleep(3000)</span><br><span class="line">        task = className(<span class="string">'android.view.View'</span>).depth(11).desc(<span class="string">'任务完成'</span>).exists() || className(<span class="string">'android.view.View'</span>).depth(18).desc(<span class="string">'任务完成'</span>).exists();</span><br><span class="line">        <span class="keyword">if</span> (task) toast(<span class="string">'任务完成'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    back()</span><br><span class="line">    toast(<span class="string">"已经逛了"</span> + ++t + <span class="string">"次"</span>)</span><br><span class="line">    sleep(2000)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">goBrowse</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (text(<span class="string">"去浏览"</span>).exists()) &#123;</span><br><span class="line">        //判断是否有去浏览</span><br><span class="line">        text(<span class="string">"去浏览"</span>).findOne().click();</span><br><span class="line">        sleep(23000)</span><br><span class="line">        back()</span><br><span class="line">        toast(<span class="string">"已经逛了"</span> + ++t + <span class="string">"次"</span>)</span><br><span class="line">        sleep(2000)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">run()</span><br></pre></td></tr></table></figure><h2 id="二、2019双十一京东养红包脚本"><a href="#二、2019双十一京东养红包脚本" class="headerlink" title="二、2019双十一京东养红包脚本"></a>二、2019双十一京东养红包脚本</h2><h3 id="4-打开浏览器，登陆京东"><a href="#4-打开浏览器，登陆京东" class="headerlink" title="4.打开浏览器，登陆京东"></a>4.打开浏览器，登陆京东</h3><p>点击<a href="https://www.jd.com" target="_blank" rel="noopener">https://www.jd.com</a></p><h3 id="5-打开下面这个网页"><a href="#5-打开下面这个网页" class="headerlink" title="5.打开下面这个网页"></a>5.打开下面这个网页</h3><p>点击<a href="https://happy.m.jd.com/babelDiy/GZWVJFLMXBQVEBDQZWMY/XJf8bH6oXDWSgS91daDJzXh9bU7/index.html#/index" target="_blank" rel="noopener">https://happy.m.jd.com/babelDiy/GZWVJFLMXBQVEBDQZWMY/XJf8bH6oXDWSgS91daDJzXh9bU7/index.html#/index</a></p><h3 id="6-按F12在Console里面输入下面代码，点击回车"><a href="#6-按F12在Console里面输入下面代码，点击回车" class="headerlink" title="6.按F12在Console里面输入下面代码，点击回车"></a>6.按F12在Console里面输入下面代码，点击回车</h3><p>将下面代码复制Console里面去回车,然后info里就能看到效果，挂后台就行了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> productList = [], shopList = [], url = <span class="string">"https://api.m.jd.com/client.action"</span>;</span><br><span class="line"><span class="keyword">function</span> autoPost(id,<span class="built_in">type</span>)&#123;</span><br><span class="line">        fetch(`<span class="variable">$&#123;url&#125;</span>?timestamp=<span class="variable">$&#123;new Date().getTime()&#125;</span>`,&#123;method: <span class="string">"POST"</span>,mode: <span class="string">"cors"</span>,credentials: <span class="string">"include"</span>,headers:&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;,body:`functionId=raisepacket_collectScore&amp;body=&#123;<span class="string">"type"</span>:<span class="variable">$&#123;type&#125;</span>,<span class="string">"ext"</span>:<span class="string">"<span class="variable">$&#123;id&#125;</span>"</span>,<span class="string">"appsign"</span>:1,<span class="string">"msgsign"</span>:2&#125;&amp;client=wh5`&#125;)</span><br><span class="line">                .<span class="keyword">then</span>(<span class="keyword">function</span>(response)&#123;<span class="built_in">return</span> response.json()&#125;)</span><br><span class="line">                .<span class="keyword">then</span>(<span class="keyword">function</span>(res)&#123;</span><br><span class="line">                        console.log(res.data.biz_msg);</span><br><span class="line">                &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">        fetch(`<span class="variable">$&#123;url&#125;</span>?<span class="variable">$&#123;new Date().getTime()&#125;</span>`,&#123;method: <span class="string">"POST"</span>,mode: <span class="string">"cors"</span>,credentials: <span class="string">"include"</span>,headers:&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;,body:<span class="string">'functionId=raisepacket_getShopAndProductList&amp;body=&amp;client=wh5'</span>&#125;)</span><br><span class="line">                .<span class="keyword">then</span>(<span class="keyword">function</span>(response)&#123;<span class="built_in">return</span> response.json()&#125;)</span><br><span class="line">                .<span class="keyword">then</span>(<span class="keyword">function</span>(res)&#123;</span><br><span class="line">                        productList = res.data.result.productList;</span><br><span class="line">                        shopList  = res.data.result.shopList;</span><br><span class="line">                        console.log(`获取到任务,商品：<span class="variable">$&#123;productList.length&#125;</span> 商品：<span class="variable">$&#123;shopList.length&#125;</span>by：ke`);</span><br><span class="line">                        autoProductTask();</span><br><span class="line">                &#125;);</span><br><span class="line">&#125;</span><br><span class="line">//逛商品</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">autoProductTask</span></span>()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">let</span> i = 0,leng = productList.length;i&lt;leng;i++)&#123;</span><br><span class="line">                (<span class="keyword">function</span>(index)&#123;</span><br><span class="line">                        setTimeout(()=&gt;&#123;</span><br><span class="line">                                <span class="built_in">let</span> item = productList[index];</span><br><span class="line">                                autoPost(item[<span class="string">'id'</span>],4);</span><br><span class="line">                                console.log(`商品总任务数：<span class="variable">$&#123;leng&#125;</span> 当前任务数：<span class="variable">$&#123;index + 1&#125;</span>by：ke`);</span><br><span class="line">                                <span class="keyword">if</span>( leng-1 == index)&#123;</span><br><span class="line">                                        autoShopTask();</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,index*1500)</span><br><span class="line">                &#125;)(i)      </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">//逛店铺</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">autoShopTask</span></span>()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">let</span> i = 0,leng = shopList.length;i&lt;leng;i++)&#123;</span><br><span class="line">                (<span class="keyword">function</span>(index)&#123;</span><br><span class="line">                        setTimeout(()=&gt;&#123;</span><br><span class="line">                                <span class="built_in">let</span> item = shopList[index];</span><br><span class="line">                                autoPost(item[<span class="string">'id'</span>],2);</span><br><span class="line">                                console.log(`商铺总任务数：<span class="variable">$&#123;leng&#125;</span> 当前任务数：<span class="variable">$&#123;index + 1&#125;</span>by：ke`);</span><br><span class="line">                                <span class="keyword">if</span>( leng-1 == index)&#123;</span><br><span class="line">                                        autoPlay();</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,index*1500)</span><br><span class="line">                &#125;)(i)      </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">//好玩互动</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">autoPlay</span></span>()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">let</span> i = 0,leng = 4;i&lt;leng;i++)&#123;</span><br><span class="line">                (<span class="keyword">function</span>(index)&#123;</span><br><span class="line">                        setTimeout(()=&gt;&#123;</span><br><span class="line">                                autoPost(0,5);</span><br><span class="line">                                console.log(`好玩互动：<span class="variable">$&#123;leng&#125;</span> 当前任务数：<span class="variable">$&#123;index + 1&#125;</span>by：ke`);</span><br><span class="line">                                <span class="keyword">if</span>( leng-1 == index)&#123;</span><br><span class="line">                                        autoInteract();</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,index*1000)</span><br><span class="line">                &#125;)(i)      </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">//视频直播</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">autoInteract</span></span>()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">let</span> i = 0,leng = 4;i&lt;leng;i++)&#123;</span><br><span class="line">                (<span class="keyword">function</span>(index)&#123;</span><br><span class="line">                        setTimeout(()=&gt;&#123;</span><br><span class="line">                                autoPost(0,10);</span><br><span class="line">                                console.log(`视频直播：<span class="variable">$&#123;leng&#125;</span> 当前任务数：<span class="variable">$&#123;index + 1&#125;</span>by：ke`);</span><br><span class="line">                                <span class="keyword">if</span>( leng-1 == index)&#123;</span><br><span class="line">                                        autoShopping();</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,index*1000)</span><br><span class="line">                &#125;)(i)      </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">//精彩会场</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">autoShopping</span></span>()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">let</span> i = 0,leng = 3;i&lt;leng;i++)&#123;</span><br><span class="line">                (<span class="keyword">function</span>(index)&#123;</span><br><span class="line">                        setTimeout(()=&gt;&#123;</span><br><span class="line">                                autoPost(0,3);</span><br><span class="line">                                console.log(`精彩会场：<span class="variable">$&#123;leng&#125;</span> 当前任务数：<span class="variable">$&#123;index + 1&#125;</span>by：ke`);</span><br><span class="line">                                &#125;,</span><br><span class="line">                        index*1000)</span><br><span class="line">                &#125;)(i)      </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">start();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、2019双十一淘宝刷喵币脚本&quot;&gt;&lt;a href=&quot;#一、2019双十一淘宝刷喵币脚本&quot; class=&quot;headerlink&quot; title=&quot;一、2019双十一淘宝刷喵币脚本&quot;&gt;&lt;/a&gt;一、2019双十一淘宝刷喵币脚本&lt;/h2&gt;&lt;p&gt;上一个版本不能用了，目前只能
      
    
    </summary>
    
    
      <category term="life" scheme="https://shareen.work/categories/life/"/>
    
    
      <category term="share" scheme="https://shareen.work/tags/share/"/>
    
  </entry>
  
  <entry>
    <title>怎么查看ubuntu是32位还是64位</title>
    <link href="https://shareen.work/2019/10/17/ubuntu-see-64or32bit/"/>
    <id>https://shareen.work/2019/10/17/ubuntu-see-64or32bit/</id>
    <published>2019-10-17T07:56:33.000Z</published>
    <updated>2019-11-09T03:03:25.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、查看操作系统是32位的还是64位的"><a href="#一、查看操作系统是32位的还是64位的" class="headerlink" title="一、查看操作系统是32位的还是64位的"></a>一、查看操作系统是32位的还是64位的</h3><p>在控制台输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo uname --m</span><br></pre></td></tr></table></figure><p><strong>回车后：</strong><br><strong>如果显示i686,则表示安装了32位操作系统</strong><br><strong>如果显示 x86_64，则表示安装了64位操作系统</strong></p><h3 id="二、如果想知道更多信息可以试试如下命令："><a href="#二、如果想知道更多信息可以试试如下命令：" class="headerlink" title="二、如果想知道更多信息可以试试如下命令："></a>二、如果想知道更多信息可以试试如下命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo uname --s <span class="comment">#显示内核名字</span></span><br><span class="line">$ sudo uname --r <span class="comment">#显示内核版本</span></span><br><span class="line">$ sudo uname --n <span class="comment">#显示网络主机名</span></span><br><span class="line">$ sudo uname --p <span class="comment">#显示cpu</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、查看操作系统是32位的还是64位的&quot;&gt;&lt;a href=&quot;#一、查看操作系统是32位的还是64位的&quot; class=&quot;headerlink&quot; title=&quot;一、查看操作系统是32位的还是64位的&quot;&gt;&lt;/a&gt;一、查看操作系统是32位的还是64位的&lt;/h3&gt;&lt;p&gt;在控
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://shareen.work/categories/Linux/"/>
    
    
      <category term="ubuntu" scheme="https://shareen.work/tags/ubuntu/"/>
    
      <category term="linux" scheme="https://shareen.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>jQuery.validator.addMethod自定义验证规则</title>
    <link href="https://shareen.work/2019/10/09/jQuery-validator-addMethod/"/>
    <id>https://shareen.work/2019/10/09/jQuery-validator-addMethod/</id>
    <published>2019-10-09T05:51:19.000Z</published>
    <updated>2019-11-09T02:53:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>jQuery.validate是一款非常不错的表单验证工具，简单易上手，而且能达到很好的体验效果</p><h3 id="一、用前必备"><a href="#一、用前必备" class="headerlink" title="一、用前必备"></a>一、用前必备</h3><p>官方网站：<a href="http://bassistance.de/jquery-plugins/jquery-plugin-validation/（注意下载最新版）" target="_blank" rel="noopener">http://bassistance.de/jquery-plugins/jquery-plugin-validation/（注意下载最新版）</a><br>需要JQuery版本：1.2.6+, 兼容 1.3.2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"../js/jquery.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"../js/jquery.validate.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="二、默认校验规则"><a href="#二、默认校验规则" class="headerlink" title="二、默认校验规则"></a>二、默认校验规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">required:<span class="literal">true</span> <span class="comment">#必输字段</span></span><br><span class="line">remote:<span class="string">"check.php"</span> <span class="comment">#使用ajax方法调用check.php验证输入值</span></span><br><span class="line">email:<span class="literal">true</span> <span class="comment">#必须输入正确格式的电子邮件</span></span><br><span class="line">url:<span class="literal">true</span> <span class="comment">#必须输入正确格式的网址</span></span><br><span class="line">date:<span class="literal">true</span> <span class="comment">#必须输入正确格式的日期</span></span><br><span class="line">dateISO:<span class="literal">true</span> <span class="comment">#必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性</span></span><br><span class="line">number:<span class="literal">true</span> <span class="comment">#必须输入合法的数字(负数，小数)</span></span><br><span class="line">digits:<span class="literal">true</span> <span class="comment">#必须输入整数</span></span><br><span class="line">creditcard: <span class="comment">#必须输入合法的信用卡号</span></span><br><span class="line">equalTo:<span class="string">"#field"</span> <span class="comment">#输入值必须和#field相同</span></span><br><span class="line">accept: <span class="comment">#输入拥有合法后缀名的字符串（上传文件的后缀）</span></span><br><span class="line">maxlength:5 <span class="comment">#输入长度最多是5的字符串(汉字算一个字符)</span></span><br><span class="line">minlength:10 <span class="comment">#输入长度最小是10的字符串(汉字算一个字符)</span></span><br><span class="line">rangelength:[5,10] <span class="comment">#输入长度必须介于 5 和 10 之间的字符串")(汉字算一个字符)</span></span><br><span class="line">range:[5,10] <span class="comment">#输入值必须介于 5 和 10 之间</span></span><br><span class="line">max:5 <span class="comment">#输入值不能大于5</span></span><br><span class="line">min:10 <span class="comment">#输入值不能小于10</span></span><br></pre></td></tr></table></figure><h3 id="三、默认的提示"><a href="#三、默认的提示" class="headerlink" title="三、默认的提示"></a>三、默认的提示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">messages: &#123;</span><br><span class="line">required: <span class="string">"This field is required."</span>,</span><br><span class="line">remote: <span class="string">"Please fix this field."</span>,</span><br><span class="line">email: <span class="string">"Please enter a valid email address."</span>,</span><br><span class="line">url: <span class="string">"Please enter a valid URL."</span>,</span><br><span class="line">date: <span class="string">"Please enter a valid date."</span>,</span><br><span class="line">dateISO: <span class="string">"Please enter a valid date (ISO)."</span>,</span><br><span class="line">dateDE: <span class="string">"Bitte geben Sie ein g眉ltiges Datum ein."</span>,</span><br><span class="line">number: <span class="string">"Please enter a valid number."</span>,</span><br><span class="line">numberDE: <span class="string">"Bitte geben Sie eine Nummer ein."</span>,</span><br><span class="line">digits: <span class="string">"Please enter only digits"</span>,</span><br><span class="line">creditcard: <span class="string">"Please enter a valid credit card number."</span>,</span><br><span class="line">equalTo: <span class="string">"Please enter the same value again."</span>,</span><br><span class="line">accept: <span class="string">"Please enter a value with a valid extension."</span>,</span><br><span class="line">maxlength: $.validator.format(<span class="string">"Please enter no more than &#123;0&#125; characters."</span>),</span><br><span class="line">minlength: $.validator.format(<span class="string">"Please enter at least &#123;0&#125; characters."</span>),</span><br><span class="line">rangelength: $.validator.format(<span class="string">"Please enter a value between &#123;0&#125; and &#123;1&#125; characters long."</span>),</span><br><span class="line">range: $.validator.format(<span class="string">"Please enter a value between &#123;0&#125; and &#123;1&#125;."</span>),</span><br><span class="line">max: $.validator.format(<span class="string">"Please enter a value less than or equal to &#123;0&#125;."</span>),</span><br><span class="line">min: $.validator.format(<span class="string">"Please enter a value greater than or equal to &#123;0&#125;."</span>)</span><br><span class="line">&#125;,如需要修改，可在js代码中加入：jQuery.extend(jQuery.validator.messages, &#123;</span><br><span class="line">required: <span class="string">"必选字段"</span>,</span><br><span class="line">remote: <span class="string">"请修正该字段"</span>,</span><br><span class="line">email: <span class="string">"请输入正确格式的电子邮件"</span>,</span><br><span class="line">url: <span class="string">"请输入合法的网址"</span>,</span><br><span class="line">date: <span class="string">"请输入合法的日期"</span>,</span><br><span class="line">dateISO: <span class="string">"请输入合法的日期 (ISO)."</span>,</span><br><span class="line">number: <span class="string">"请输入合法的数字"</span>,</span><br><span class="line">digits: <span class="string">"只能输入整数"</span>,</span><br><span class="line">creditcard: <span class="string">"请输入合法的信用卡号"</span>,</span><br><span class="line">equalTo: <span class="string">"请再次输入相同的值"</span>,</span><br><span class="line">accept: <span class="string">"请输入拥有合法后缀名的字符串"</span>,</span><br><span class="line">maxlength: jQuery.validator.format(<span class="string">"请输入一个长度最多是 &#123;0&#125; 的字符串"</span>),</span><br><span class="line">minlength: jQuery.validator.format(<span class="string">"请输入一个长度最少是 &#123;0&#125; 的字符串"</span>),</span><br><span class="line">rangelength: jQuery.validator.format(<span class="string">"请输入一个长度介于 &#123;0&#125; 和 &#123;1&#125; 之间的字符串"</span>),</span><br><span class="line">range: jQuery.validator.format(<span class="string">"请输入一个介于 &#123;0&#125; 和 &#123;1&#125; 之间的值"</span>),</span><br><span class="line">max: jQuery.validator.format(<span class="string">"请输入一个最大为 &#123;0&#125; 的值"</span>),</span><br><span class="line">min: jQuery.validator.format(<span class="string">"请输入一个最小为 &#123;0&#125; 的值"</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//推荐做法，将此文件放入messages_cn.js中，在页面中引入</span><br><span class="line">&lt;script src=<span class="string">"../js/messages_cn.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="四、使用方法"><a href="#四、使用方法" class="headerlink" title="四、使用方法"></a>四、使用方法</h3><p><strong>html:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//head里需要加入</span><br><span class="line"><span class="comment">#&lt;script src="../js/jquery.js" type="text/javascript"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">#&lt;script src="../js/jquery.validate.js" type="text/javascript"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">#&lt;script src="./js/messages_cn.js" type="text/javascript"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span> id=<span class="string">"registerForm"</span> onsubmit=<span class="string">"return toVaild()"</span>&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                        &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"userName"</span> class=<span class="string">"username"</span> placeholder=<span class="string">"您的用户名"</span> autocomplete=<span class="string">"off"</span>/&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                        &lt;input <span class="built_in">type</span>=<span class="string">"password"</span> name=<span class="string">"userPw"</span> class=<span class="string">"password"</span> placeholder=<span class="string">"输入密码"</span> oncontextmenu=<span class="string">"return false"</span> onpaste=<span class="string">"return false"</span> /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                        &lt;input <span class="built_in">type</span>=<span class="string">"password"</span> name=<span class="string">"confirm_password"</span> class=<span class="string">"confirm_password"</span> placeholder=<span class="string">"再次输入密码"</span> oncontextmenu=<span class="string">"return false"</span> onpaste=<span class="string">"return false"</span> /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                        &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"userPhoneNum"</span> class=<span class="string">"phone_number"</span> placeholder=<span class="string">"输入手机号码"</span> autocomplete=<span class="string">"off"</span> id=<span class="string">"number"</span>/&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                        &lt;input <span class="built_in">type</span>=<span class="string">"email"</span> name=<span class="string">"userMail"</span> class=<span class="string">"email"</span> placeholder=<span class="string">"输入邮箱地址"</span> oncontextmenu=<span class="string">"return false"</span> onpaste=<span class="string">"return false"</span> /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">&lt;button id=<span class="string">"submit"</span> <span class="built_in">type</span>=<span class="string">"submit"</span>&gt;注 册&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><strong>messages_cn.js:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">//jquery.validate表单验证</span><br><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">//注册表单验证</span><br><span class="line">        $(<span class="string">"#registerForm"</span>).validate(&#123;</span><br><span class="line">                rules:&#123;</span><br><span class="line">                        userName:&#123;</span><br><span class="line">                                required:<span class="literal">true</span>,//必填</span><br><span class="line">                                minlength:3, //最少3个字符</span><br><span class="line">                                maxlength:32,//最多20个字符</span><br><span class="line">                                uName:<span class="literal">true</span>,//自定义的规则</span><br><span class="line">                                /*remote:&#123;</span><br><span class="line">                                        url:<span class="string">"http://kouss.com/demo/Sharelink/remote.json"</span>,//用户名重复检查，别跨域调用</span><br><span class="line">                                        <span class="built_in">type</span>:<span class="string">"post"</span>,</span><br><span class="line">                                &#125;,*/</span><br><span class="line">                        &#125;,</span><br><span class="line">                        userPw:&#123;</span><br><span class="line">                                required:<span class="literal">true</span>,</span><br><span class="line">                                minlength:3,</span><br><span class="line">                                maxlength:32,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        userMail:&#123;</span><br><span class="line">                                required:<span class="literal">true</span>,</span><br><span class="line">                                email:<span class="literal">true</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        confirm_password:&#123;</span><br><span class="line">                                required:<span class="literal">true</span>,</span><br><span class="line">                                minlength:3,</span><br><span class="line">                                equalTo:<span class="string">'.password'</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        userPhoneNum:&#123;</span><br><span class="line">                                required:<span class="literal">true</span>,</span><br><span class="line">                                userPhoneNum:<span class="literal">true</span>,//自定义的规则</span><br><span class="line">                                digits:<span class="literal">true</span>,//整数</span><br><span class="line">                        &#125;</span><br><span class="line">&#125;,</span><br><span class="line">//错误信息提示</span><br><span class="line">                messages:&#123;</span><br><span class="line">                        userName:&#123;</span><br><span class="line">                                required:<span class="string">"必须填写用户名"</span>,</span><br><span class="line">                                minlength:<span class="string">"用户名至少为3个字符"</span>,</span><br><span class="line">                                maxlength:<span class="string">"用户名至多为32个字符"</span>,</span><br><span class="line">                                //remote: <span class="string">"用户名已存在"</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        userPw:&#123;</span><br><span class="line">                                required:<span class="string">"必须填写密码"</span>,</span><br><span class="line">                                minlength:<span class="string">"密码至少为3个字符"</span>,</span><br><span class="line">                                maxlength:<span class="string">"密码至多为32个字符"</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        userMail:&#123;</span><br><span class="line">                                required:<span class="string">"请输入邮箱地址"</span>,</span><br><span class="line">                                email: <span class="string">"请输入正确的email地址"</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        confirm_password:&#123;</span><br><span class="line">                                required: <span class="string">"请再次输入密码"</span>,</span><br><span class="line">                                minlength: <span class="string">"确认密码不能少于3个字符"</span>,</span><br><span class="line">                                equalTo: <span class="string">"两次输入密码不一致"</span>,//与另一个元素相同</span><br><span class="line">                        &#125;,</span><br><span class="line">                        userPhoneNum:&#123;</span><br><span class="line">                                required:<span class="string">"请输入手机号码"</span>,</span><br><span class="line">                                digits:<span class="string">"请输入正确的手机号码"</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line"></span><br><span class="line">                &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">// 字母和数字的验证</span><br><span class="line">        jQuery.validator.addMethod(<span class="string">"uName"</span>, <span class="keyword">function</span>(value, element) &#123;</span><br><span class="line">                var uName = /^([a-zA-Z0-9]+)$/;</span><br><span class="line">                <span class="built_in">return</span> this.optional(element) || (uName.test(value));</span><br><span class="line">        &#125;, <span class="string">"用户名仅支持非空，数字和英文"</span>);</span><br><span class="line"></span><br><span class="line">        //添加自定义验证规则</span><br><span class="line">        jQuery.validator.addMethod(<span class="string">"userPhoneNum"</span>, <span class="keyword">function</span>(value, element) &#123;</span><br><span class="line">                var length = value.length;</span><br><span class="line">                var userPhoneNum = /^1[3456789]\d&#123;9&#125;$/</span><br><span class="line">                <span class="built_in">return</span> this.optional(element) || (length == 11 &amp;&amp; userPhoneNum.test(value));</span><br><span class="line">        &#125;, <span class="string">"手机号码格式错误"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>方法：$.validator.addMethod(name,function(value,element){  return true||false },message)；</strong></p><pre><code>参数：  第一个参数:用于type匹配的名称，自定义。  第二个参数:是一个function函数，决定了验证是否成功！里面是自定义验证。  第三个参数：当验证不成功时返回的提示错误信息。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;jQuery.validate是一款非常不错的表单验证工具，简单易上手，而且能达到很好的体验效果&lt;/p&gt;
&lt;h3 id=&quot;一、用前必备&quot;&gt;&lt;a href=&quot;#一、用前必备&quot; class=&quot;headerlink&quot; title=&quot;一、用前必备&quot;&gt;&lt;/a&gt;一、用前必备&lt;/h3&gt;&lt;
      
    
    </summary>
    
    
      <category term="前端技术" scheme="https://shareen.work/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="jQuery" scheme="https://shareen.work/tags/jQuery/"/>
    
      <category term="html5" scheme="https://shareen.work/tags/html5/"/>
    
      <category term="validate" scheme="https://shareen.work/tags/validate/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu配置Tomcat改80端口报错</title>
    <link href="https://shareen.work/2019/09/30/ubuntu-tomcat-80bug/"/>
    <id>https://shareen.work/2019/09/30/ubuntu-tomcat-80bug/</id>
    <published>2019-09-30T03:01:10.000Z</published>
    <updated>2019-11-09T03:48:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>本地环境：<br>*ubuntu 18.04 LTS<br>*jdk 1.8.0_181<br>*tomcat 9.0.26</p><p>使用Ubuntu 18.04 环境部署 Java Web 应用，在配置 Tomcat时，发现8080端口没问题，改为80端口后就报错，然后自己网上找了些资料改去改来，不是[“http-nio-80”]，就APR，要么就拒绝连接。明天前面都用得好好的！后来又网上看了很多，才发现问题，然后就写这篇记忆下。</p><p>具体问题为在 Linux中对非root用户只能使用 1024 及以上的端口号，所以 80 端口对非 root 用户为禁用状态。第一种解决方法：使用 root 用户去配置并启动 Tomcat。这里讲的是第二种解决方法：使用 iptables 的转发功能，将 80 端口消息转发给 8080 端口。如果嫌麻烦，建议第一种。自己记住就行了。第二种教程如下：</p><h3 id="一、前期工作"><a href="#一、前期工作" class="headerlink" title="一、前期工作"></a>一、前期工作</h3><h4 id="1-查看系统是否安装防火墙："><a href="#1-查看系统是否安装防火墙：" class="headerlink" title="1.查看系统是否安装防火墙："></a>1.查看系统是否安装防火墙：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ whereis iptables</span><br></pre></td></tr></table></figure><h4 id="2-若已安装则下面显示为："><a href="#2-若已安装则下面显示为：" class="headerlink" title="2.若已安装则下面显示为："></a>2.若已安装则下面显示为：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables: </span><br><span class="line">$ /sbin/iptables /etc/iptables.rules /usr/share/iptables /usr/share/man/man8/iptables.8.gz</span><br></pre></td></tr></table></figure><h4 id="3-否之，安装防火墙："><a href="#3-否之，安装防火墙：" class="headerlink" title="3.否之，安装防火墙："></a>3.否之，安装防火墙：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install iptables</span><br></pre></td></tr></table></figure><h4 id="4-查看防火墙信息："><a href="#4-查看防火墙信息：" class="headerlink" title="4.查看防火墙信息："></a>4.查看防火墙信息：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -L -n</span><br></pre></td></tr></table></figure><h3 id="二、配置防火墙"><a href="#二、配置防火墙" class="headerlink" title="二、配置防火墙"></a>二、配置防火墙</h3><h4 id="1-创建-iptables-rules-文件："><a href="#1-创建-iptables-rules-文件：" class="headerlink" title="1.创建 iptables.rules 文件："></a>1.创建 iptables.rules 文件：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/iptables.rules</span><br></pre></td></tr></table></figure><h4 id="2-按-i-进入编辑模式，添加以下规则："><a href="#2-按-i-进入编辑模式，添加以下规则：" class="headerlink" title="2.按 i 进入编辑模式，添加以下规则："></a>2.按 i 进入编辑模式，添加以下规则：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:syn-flood - [0:0]</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8443 -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 100/sec --<span class="built_in">limit</span>-burst 100 -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 1/s --<span class="built_in">limit</span>-burst 10 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j syn-flood</span><br><span class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">-A syn-flood -p tcp -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 3/sec --<span class="built_in">limit</span>-burst 6 -j RETURN</span><br><span class="line">-A syn-flood -j REJECT --reject-with icmp-port-unreachable</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">22   端口为 SSH 默认端口 </span><br><span class="line">80   端口为 HTTP 默认端口 </span><br><span class="line">443  端口为 HTTPS 默认端口 </span><br><span class="line">8080 端口为 Tomcat 默认的 HTTP 端口 </span><br><span class="line">8443 端口为 Tomcat 默认的 HTTPS 端口</span><br></pre></td></tr></table></figure><h4 id="3-使防火墙规则生效："><a href="#3-使防火墙规则生效：" class="headerlink" title="3.使防火墙规则生效："></a>3.使防火墙规则生效：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables-restore &lt; /etc/iptables.rules</span><br></pre></td></tr></table></figure><h4 id="4-配置防火墙规则开机启动："><a href="#4-配置防火墙规则开机启动：" class="headerlink" title="4.配置防火墙规则开机启动："></a>4.配置防火墙规则开机启动：</h4><p>*创建 iptables 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/network/<span class="keyword">if</span>-pre-up.d/iptables</span><br></pre></td></tr></table></figure><p>*添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ !/bin/bash</span><br><span class="line">$ iptables-restore &lt; /etc/iptables.rules</span><br></pre></td></tr></table></figure><h4 id="5-为-iptables-文件添加执行权限："><a href="#5-为-iptables-文件添加执行权限：" class="headerlink" title="5.为 iptables 文件添加执行权限："></a>5.为 iptables 文件添加执行权限：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x /etc/network/<span class="keyword">if</span>-pre-up.d/iptables</span><br></pre></td></tr></table></figure><h4 id="6-查看规则是否生效："><a href="#6-查看规则是否生效：" class="headerlink" title="6.查看规则是否生效："></a>6.查看规则是否生效：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -L -n</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Chain INPUT (policy DROP)</span><br><span class="line">target     prot opt <span class="built_in">source</span>           destination         </span><br><span class="line">ACCEPT     all  --  0.0.0.0/0        0.0.0.0/0           </span><br><span class="line">ACCEPT     all  --  0.0.0.0/0        0.0.0.0/0        state RELATED,ESTABLISHED</span><br><span class="line">ACCEPT     tcp  --  0.0.0.0/0        0.0.0.0/0        state NEW tcp dpt:22</span><br><span class="line">ACCEPT     tcp  --  0.0.0.0/0        0.0.0.0/0        state NEW tcp dpt:80</span><br><span class="line">ACCEPT     tcp  --  0.0.0.0/0        0.0.0.0/0        state NEW tcp dpt:443</span><br><span class="line">ACCEPT     tcp  --  0.0.0.0/0        0.0.0.0/0        state NEW tcp dpt:8080</span><br><span class="line">ACCEPT     tcp  --  0.0.0.0/0        0.0.0.0/0        state NEW tcp dpt:8443</span><br><span class="line">ACCEPT     icmp --  0.0.0.0/0        0.0.0.0/0        <span class="built_in">limit</span>: avg 100/sec burst 100</span><br><span class="line">ACCEPT     icmp --  0.0.0.0/0        0.0.0.0/0        <span class="built_in">limit</span>: avg 1/sec burst 10</span><br><span class="line">syn-flood  tcp  --  0.0.0.0/0        0.0.0.0/0        tcp flags:0x17/0x02</span><br><span class="line">REJECT     all  --  0.0.0.0/0        0.0.0.0/0        reject-with icmp-host-prohibited</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>           destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>           destination         </span><br><span class="line"></span><br><span class="line">Chain syn-flood (1 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>           destination         </span><br><span class="line">RETURN     tcp  --  0.0.0.0/0        0.0.0.0/0        <span class="built_in">limit</span>: avg 3/sec burst 6</span><br><span class="line">REJECT     all  --  0.0.0.0/0        0.0.0.0/0        reject-with icmp-port-unreachable</span><br></pre></td></tr></table></figure><h3 id="三、新增转发规则"><a href="#三、新增转发规则" class="headerlink" title="三、新增转发规则"></a>三、新增转发规则</h3><h4 id="1-将-80-端口转发至-8080-端口"><a href="#1-将-80-端口转发至-8080-端口" class="headerlink" title="1.将 80 端口转发至 8080 端口"></a>1.将 80 端口转发至 8080 端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080</span><br></pre></td></tr></table></figure><h4 id="2-查看-80-端口相关的转发规则"><a href="#2-查看-80-端口相关的转发规则" class="headerlink" title="2.查看 80 端口相关的转发规则"></a>2.查看 80 端口相关的转发规则</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -L -n | grep 80</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ REDIRECT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:80 redir ports 8080</span><br></pre></td></tr></table></figure><h4 id="3-配置-Tomcat-服务端口为-8080"><a href="#3-配置-Tomcat-服务端口为-8080" class="headerlink" title="3.配置 Tomcat 服务端口为 8080"></a>3.配置 Tomcat 服务端口为 8080</h4><p>*找到 Tomcat 安装目录下的 ../conf/server.xml 配置文件并且打开编辑如下内容，改为 8080 端口即可。<br>*&lt;Connector port=”8080” protocol=”HTTP/1.1”</p><h4 id="4-重启-Tomcat-服务，试一下应该就可以进行正常访问-80-端口了。"><a href="#4-重启-Tomcat-服务，试一下应该就可以进行正常访问-80-端口了。" class="headerlink" title="4.重启 Tomcat 服务，试一下应该就可以进行正常访问 80 端口了。"></a>4.重启 Tomcat 服务，试一下应该就可以进行正常访问 80 端口了。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service tomcat restart</span><br></pre></td></tr></table></figure><h3 id="四、删除转发规则"><a href="#四、删除转发规则" class="headerlink" title="四、删除转发规则"></a>四、删除转发规则</h3><h4 id="1-将转发规则以数字序号排列显示"><a href="#1-将转发规则以数字序号排列显示" class="headerlink" title="1.将转发规则以数字序号排列显示:"></a>1.将转发规则以数字序号排列显示:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -L -n --line-numbers</span><br></pre></td></tr></table></figure><ul><li>Chain PREROUTING (policy ACCEPT)</li><li>num target prot opt source destination</li><li>1 REDIRECT tcp – 0.0.0.0/0 0.0.0.0/0 tcp dpt:80 redir ports 8080</li></ul><h4 id="2-删除-8080-端口对于的转发规则："><a href="#2-删除-8080-端口对于的转发规则：" class="headerlink" title="2.删除 8080 端口对于的转发规则："></a>2.删除 8080 端口对于的转发规则：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -D PREROUTING 1</span><br></pre></td></tr></table></figure><h3 id="五、相关问题"><a href="#五、相关问题" class="headerlink" title="五、相关问题"></a>五、相关问题</h3><p>上述配置完成后，即可使用 IP 地址（或域名）+ 应用程序页面访问路径。如需直接使用 IP 地址（或域名）访问应用程序默认页面，应另外配置。另外，若参照上述配置时使用的是通过 域名 进行访问，则需要进行域名备案，同时需要指定访问的应用。当然可以暂且使用 域名:8080 进行访问，或是使用 https://域名 进行访问。</p><h3 id="六、文章参考"><a href="#六、文章参考" class="headerlink" title="六、文章参考"></a>六、文章参考</h3><p><a href="https://wumaozheng.com/2018/ubuntu16.04-config-80port.html#point2" target="_blank" rel="noopener">Ubuntu16.04配置Tomcat访问80端口</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本地环境：&lt;br&gt;*ubuntu 18.04 LTS&lt;br&gt;*jdk 1.8.0_181&lt;br&gt;*tomcat 9.0.26&lt;/p&gt;
&lt;p&gt;使用Ubuntu 18.04 环境部署 Java Web 应用，在配置 Tomcat时，发现8080端口没问题，改为80端口后就报错，
      
    
    </summary>
    
    
      <category term="后端技术" scheme="https://shareen.work/categories/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="ubuntu" scheme="https://shareen.work/tags/ubuntu/"/>
    
      <category term="linux" scheme="https://shareen.work/tags/linux/"/>
    
      <category term="tomcat" scheme="https://shareen.work/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>my first blog</title>
    <link href="https://shareen.work/2019/09/27/my-first-blog/"/>
    <id>https://shareen.work/2019/09/27/my-first-blog/</id>
    <published>2019-09-27T07:53:52.000Z</published>
    <updated>2019-11-09T03:04:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、总结"><a href="#一、总结" class="headerlink" title="一、总结"></a>一、总结</h3><p>马上国庆了，在这几天里，总算把这个个人小站弄出来了！我太难了。最初是打算做个大的，买了域名，也用了服务器，后面也找了源码部署上去,效果也还行吧。不过服务器是免费的，那一套系统自己也没去改。想到后续搭建好了，需要更新等。就有点头疼。然后后面查资料的时候，看到了一些比较好的博客，然后发现他们基本都是基于GitHub搭建自己的免费个人博客。自己也有兴趣了，开始查资料，做准备。到了装环境的时候，简直要命，下一些包下了无数次还是失败，也尝试很多方法，然而没用。我都是两台电脑开工的。在Windows上试过，Ubuntu上试过，后来莫名其妙的好了，然后就开始设置主题等这些。最终结果还是好的，也完成了！！！自己还是很欣慰，然后将开始漫长的学习！</p><h3 id="二、关于后面"><a href="#二、关于后面" class="headerlink" title="二、关于后面"></a>二、关于后面</h3><p>自己毕竟还是太菜了，后面尽量会记录一些自己学习的啊，遇到的问题这些，用来记忆等！还会分享一些生活中有趣的！</p><h3 id="三、然后兴趣爱好"><a href="#三、然后兴趣爱好" class="headerlink" title="三、然后兴趣爱好"></a>三、然后兴趣爱好</h3><p>这方面很广，就是技术更不上，希望后面能有提升！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、总结&quot;&gt;&lt;a href=&quot;#一、总结&quot; class=&quot;headerlink&quot; title=&quot;一、总结&quot;&gt;&lt;/a&gt;一、总结&lt;/h3&gt;&lt;p&gt;马上国庆了，在这几天里，总算把这个个人小站弄出来了！我太难了。最初是打算做个大的，买了域名，也用了服务器，后面也找了源码部署
      
    
    </summary>
    
    
      <category term="life" scheme="https://shareen.work/categories/life/"/>
    
    
      <category term="share" scheme="https://shareen.work/tags/share/"/>
    
  </entry>
  
</feed>
